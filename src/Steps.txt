npm create-react-app my-app

create github repository
    git remote add origin <path-to-git>
    # push your code
        git branch -M main
        git push -u origin main
    # Make Changes and Push Updates
        npm run build
        git add .
        git commit -m "Your commit message"
        git push origin main

Setup tailwind
    # follow the steps for tailwind installation
    npm install -D tailwindcss
    npx tailwindcss init

Setup Routing
    > npm i -D react-router-dom

Email and Password Validation using useRef

Setup Firebase and go live
    Create new project
    npm install firebase
    create firebase.js and add configurations
    Setup Authentication > Sign-in method > Enable Email/Password
    For Hosting install firebase CLI
        > npm install -g firebase-tools
        Initialize your project > firebase login
                                > firebase init
        What do you want to use as your public directory? build
        > npm run build
        > firebase deploy

Create a password-based account using Firebase
 - In firebase.js export const auth = getAuth(); as it will be common
 - createUserWithEmailAndPassword

Sign in a user with an email address and password
 - signInWithEmailAndPassword

To make the user id available throughout, setup redux store
 > npm i -D @reduxjs/toolkit
 > npm i react-redux
 - create store: appStore.js
 - create user slice: userSlice.js
 - provide appStore to app in App.js

Get the currently signed-in user (firebase)
 - The recommended way to get the current user is by setting an observer on the Auth object: onAuthStateChanged
 - this is to be done only once so set it using useEffect in Body.js
 - dispatch the addUser action using useDispatch

useNavigate to navigate to browse page when user is signed in -> Login.js

Add user icon and sign out button in header
 - use firebase signOut to handle sign out and navigate to login page
 - if user is logged in then only show sign out option, for this subscribe to store using useSelector hook in Header.js

Updating user profile using firebase updateProfile
 - Adding this in Login.js inside createUserWithEmailAndPassword when user is signed in

--------
When user is not signed in and tries to access browse page redirect user to login
 - use useNaigate to navigate user, but since navigate must be used inside router provider only, move the onAuthStateChanged to header instead of body
 - unsubscribe to onAuthStateChanged when header component unmounts -> this is done by returning a function from useEffect

Login to TMDB and register a project in API section
 - goto Now Playing -> get https://api.themoviedb.org/3/movie/now_playing
 - export options from constants.js
 - call the fetch function isnide useEffect

React.StrictMode defined in index.js calls the API and components twice during development to track any bugs.

create movieSlice to update movies in store
add movieSlice reducer to appStore
dispatch action to addNowPlayingMovies in Browse.js

Move the above code of fetching the movie data and updating the store to custom hook useNowPlayingMovies
use the useNowPlayingMovies hook inside Browse.js

Create component MainContainer
- use useSelector to subscribe to movie store
- pass title and overview to VideoTitle component (display title, description, play and info button)
- pass id to VideoBackground component

fetch TMDB API in VideoBackground component Movies -> Videos to get the trailer
- add VIDEOS_OPTIONS to constants
- filter out the trailer
- either use useState to display the trailer or use redux to store the video (used redux movieSlice)
- use useSelector to subscribe to trailerVideo from store
- add trailer.key to youtube embed code
- move this code to useMovieTrailer

----------------

Make component SecondaryContainer for listing movies
- SecondaryContainer contains MovieList and passes title and nowPlayingMovies from store
- MovieList contains MovieCard component
  - Pass movie.poster_path from MovieList to MovieCard
  - in MovieCard add the image with poster_path and image CDN url from TMDB
  - map through movies in MovieList to display all MovieCard
- add different MovieList for Now Playing, Popular, Top rated ... movies
  - for each MovieList Type create a separate hook and add to store